[{"no_lemma_count": 22, "no_lemma": ["case", "'re", "mac", "change", "port", "application", "research", "seams", "like", "por", "5000", "used", "one", "apple", "'s", "services", "make", "case", "changed", "5050", "worked", "normally"], "with_lemma_count": 22, "with_lemma": ["case", "be", "mac", "change", "port", "application", "research", "seam", "like", "por", "5000", "use", "one", "apple", "'s", "service", "make", "case", "change", "5050", "work", "normally"]}, {"no_lemma_count": 17, "no_lemma": ["basically", "followed", "@david", "worked", "well", "returned", "response", "first", "installed", "flask", "cors", "used", "endpoint", "returned", "response", "following", "headers"], "with_lemma_count": 17, "with_lemma": ["basically", "follow", "@david", "work", "well", "return", "response", "first", "instal", "flask", "cor", "use", "endpoint", "return", "response", "follow", "header"]}, {"no_lemma_count": 29, "no_lemma": ["please", "note", "application", "returns", "500", "error", "browser", "may", "understand", "cors", "error", "flask", "cors", "adds", "headers", "return", "options", "n't", "work", "put", "flask", "debug", "mode", "validate", "'s", "internal", "server", "error", ".flaskenv"], "with_lemma_count": 29, "with_lemma": ["please", "note", "application", "return", "500", "error", "browser", "may", "understand", "cor", "error", "flask", "cor", "add", "header", "return", "option", "not", "work", "put", "flask", "debug", "mode", "validate", "be", "internal", "server", "error", ".flaskenv"]}, {"no_lemma_count": 31, "no_lemma": ["tried", "solutions", "kept", "failing", "sure", "solutions", "would", "worked", "one", "obvious", "mistake", "made", "client", "application", "maybe", "saves", "bit", "debugging", "time", "request", "called", "rest", "service", "via", "fix", "simple", "calling", "service", "http", "silly", "mistake"], "with_lemma_count": 31, "with_lemma": ["try", "solution", "keep", "fail", "sure", "solution", "would", "work", "one", "obvious", "mistake", "make", "client", "application", "maybe", "save", "bit", "debug", "time", "request", "call", "rest", "service", "via", "fix", "simple", "call", "service", "http", "silly", "mistake"]}, {"no_lemma_count": 13, "no_lemma": ["installed", "flask", "using", "following", "command", "using", "declaration", "like", "pips3.6", "install", "--user", "flask", "cors"], "with_lemma_count": 13, "with_lemma": ["instal", "flask", "use", "follow", "command", "use", "declaration", "like", "pips3.6", "install", "--us", "flask", "cor"]}, {"no_lemma_count": 15, "no_lemma": ["client", "side", "need", "ensure", "kind", "data", "server", "dealing", "example", "form", "data", "json", "code", "written", "magic"], "with_lemma_count": 15, "with_lemma": ["client", "side", "need", "ensure", "kind", "datum", "server", "deal", "example", "form", "datum", "json", "code", "write", "magic"]}, {"no_lemma_count": 14, "no_lemma": ["based", "gyuhyeon", "choi", "'s", "response", "added", "return", "response", "extra", "access", "control", "expose", "headers", "worked"], "with_lemma_count": 14, "with_lemma": ["base", "gyuhyeon", "choi", "'s", "response", "add", "return", "response", "extra", "access", "control", "expose", "header", "work"]}, {"no_lemma_count": 5, "no_lemma": ["please", "use", "@cross_origin(origin=", "python", "file"], "with_lemma_count": 5, "with_lemma": ["please", "use", "@cross_origin(origin=", "python", "file"]}, {"no_lemma_count": 37, "no_lemma": ["tried", "others", "suggestions", "answers", "'s", "use", "works", "steps", "pip", "install", "flask", "flask", "cors", "copy", "paste", "app.py", "file", "code", "note", "sure", "client", "'s", "ajax", "configuration", "following", "one", "wonders", "support_credentials", "=", "true", "means", "sends", "cookies", "along", "payload", "back", "forth"], "with_lemma_count": 37, "with_lemma": ["try", "other", "suggestion", "answer", "be", "use", "work", "step", "pip", "install", "flask", "flask", "cor", "copy", "paste", "app.py", "file", "code", "note", "sure", "client", "'s", "ajax", "configuration", "following", "one", "wonder", "support_credential", "=", "true", "mean", "send", "cookie", "along", "payload", "back", "forth"]}, {"no_lemma_count": 21, "no_lemma": ["flask", "flask", "cors", "module", "following", "code", "snippet", "well", "procedure", "pip", "install", "-u", "flask", "cors", "add", "lines", "flask", "application", "see", "clicking", "link"], "with_lemma_count": 21, "with_lemma": ["flask", "flask", "cor", "module", "follow", "code", "snippet", "well", "procedure", "pip", "install", "-u", "flask", "cor", "add", "line", "flask", "application", "see", "click", "link"]}, {"no_lemma_count": 20, "no_lemma": ["try", "'ve", "tried", "@cross_origin", "tutorial", "flask", "website", "however", "work", "seems", "like", "add", "headers", "response", "later", "remaining", "code", "think", "may", "useful"], "with_lemma_count": 20, "with_lemma": ["try", "'ve", "try", "@cross_origin", "tutorial", "flask", "website", "however", "work", "seem", "like", "add", "header", "response", "later", "remain", "code", "think", "may", "useful"]}, {"no_lemma_count": 6, "no_lemma": ["get", "hand", "dirty", "handling", "cors", "detail"], "with_lemma_count": 6, "with_lemma": ["get", "hand", "dirty", "handle", "cor", "detail"]}, {"no_lemma_count": 17, "no_lemma": ["solution", "worked", "included", "method", "add", "headers", "necessary", "raise", "http", "response", "ex", "note", "method", "python", "compiling", "may", "edit"], "with_lemma_count": 17, "with_lemma": ["solution", "work", "include", "method", "add", "header", "necessary", "raise", "http", "response", "ex", "note", "method", "python", "compile", "may", "edit"]}, {"no_lemma_count": 30, "no_lemma": ["use", "cors", "decorator", "route", "decorator", "'s", "snippet", "documentation", "appears", "using", "json", "'s", "case", "likely", "read", "documentation", "specifically", "mentions", "use", "case", "cors_headers", "set", "'s", "fold", "documentation", "well", "written", "easy", "understand", "http://flask-cors.readthedocs.org/en/latest/#using-json-with-cors"], "with_lemma_count": 30, "with_lemma": ["use", "cor", "decorator", "route", "decorator", "be", "snippet", "documentation", "appear", "use", "json", "be", "case", "likely", "read", "documentation", "specifically", "mention", "use", "case", "cors_header", "set", "be", "fold", "documentation", "well", "write", "easy", "understand", "http://flask-cors.readthedocs.org/en/latest/#using-json-with-cor"]}, {"no_lemma_count": 21, "no_lemma": ["flask", "code", "seems", "correct", "think", "error", "happens", "ngork", "server", "n't", "allow", "cors", "request", "allows", "recommend", "use", "axios", "package", "instead", "built", "fetch"], "with_lemma_count": 21, "with_lemma": ["flask", "code", "seem", "correct", "think", "error", "happen", "ngork", "server", "not", "allow", "cor", "request", "allow", "recommend", "use", "axio", "package", "instead", "build", "fetch"]}, {"no_lemma_count": 13, "no_lemma": ["turns", "actually", "cors", "related", "error", "kind", "odd", "error", "response", "see", "comment", "original", "question"], "with_lemma_count": 13, "with_lemma": ["turn", "actually", "cor", "relate", "error", "kind", "odd", "error", "response", "see", "comment", "original", "question"]}, {"no_lemma_count": 11, "no_lemma": ["check", "header", "really", "present", "network", "tab", "browser", "use", "hooks", "enable", "cors"], "with_lemma_count": 11, "with_lemma": ["check", "header", "really", "present", "network", "tab", "browser", "use", "hook", "enable", "cor"]}, {"no_lemma_count": 48, "no_lemma": ["add", "response", "headers", "`", "@app.after_request", "`", "\n\n", "start", "\n\n", "`", "@app.after_request", "`", "\n\n", "`", "def", "per_request_callbacks(response", "`", "\n\n", "`", "response.headers['access", "control", "allow", "origin", "=", "`", "\n\n", "`", "return", "response", "`", "\n\n", "flask", "cors", "cleaner", "may", "easier", "debug", "\n\n", "still", "n\u2019t", "work", "options", "request", "\n\n", "oh", "hook", "before_request", "handle"], "with_lemma_count": 48, "with_lemma": ["add", "response", "header", "`", "@app.after_request", "`", "\n\n", "start", "\n\n", "`", "@app.after_requ", "`", "\n\n", "`", "def", "per_request_callbacks(response", "`", "\n\n", "`", "response.headers['access", "control", "allow", "origin", "=", "`", "\n\n", "`", "return", "response", "`", "\n\n", "flask", "cor", "clean", "may", "easy", "debug", "\n\n", "still", "not", "work", "option", "request", "\n\n", "oh", "hook", "before_request", "handle"]}, {"no_lemma_count": 205, "no_lemma": ["wht", "app", "factory", "look", "like", "cors", "flask", "usually", "one", "line", "operation", "\n\n", ">", "cors", "flask", "usually", "one", "line", "opera", "\n\n", "mean", "app", "factory", "\n\n", "create_app", "function", "look", "like", "\n\n", "https://flask.palletsprojects.com/en/1.1.x/patterns/appfactories/", "\n\n", "\\`\\`\\", "`", "\n\n", "`", "python", "standard", "library", "`", "\n\n", "`", "import", "os", "`", "\n\n", "`", "third", "party", "libraries", "`", "\n\n", "`", "flask", "import", "flask", "`", "\n\n", "`", "dotenv", "import", "load_dotenv", "`", "\n\n", "`", "flask_login", "import", "loginmanager", "`", "\n\n", "`", "flask_cors", "import", "cors", "`", "\n\n", "`", "internal", "imports", "`", "\n\n", "`", "login", "import", "login_page", "`", "\n\n", "`", "user", "import", "user", "`", "\n\n", "`", "load_dotenv", "`", "\n\n", "`", "flask", "app", "setup", "`", "\n\n", "`", "app", "=", "flask(__name", "`", "\n\n", "`", "app.secret_key", "=", "os.environ.get(\"secret_key", "os.urandom(24", "`", "\n\n", "`", "app.config['cors_headers", "=", "content", "type", "`", "\n\n", "`", "user", "session", "management", "setup", "`", "\n\n", "`", "login_manager", "=", "loginmanager", "`", "\n\n", "`", "login_manager.init_app(app", "`", "\n\n", "`", "u", "login_manager.user_loader", "`", "\n\n", "`", "def", "load_user(user_id", "`", "\n\n", "`", "return", "user.get(user_id", "`", "\n\n", "`", "app.register_blueprint(login_page", "`", "\n\n", "`", "cors(app", "`", "\n\n", "`", "app.config['cors_headers", "=", "content", "type", "`", "\n\n", "`", "name", "=", "=", "main", "`", "\n\n", "`", "app.run(host=\"localhost", "debug", "=", "true)\\", "`", "\n\n", "\\`\\`\\", "`", "\n\n", "please", "love", "god", "learn", "format", "code", "reddit", "use", "three", "backticks", "surrounding", "code", "\n\n", "woof", "\u2019ll", "look", "tomorrow", "\u2019m", "computer"], "with_lemma_count": 205, "with_lemma": ["wht", "app", "factory", "look", "like", "cor", "flask", "usually", "one", "line", "operation", "\n\n", ">", "cor", "flask", "usually", "one", "line", "opera", "\n\n", "mean", "app", "factory", "\n\n", "create_app", "function", "look", "like", "\n\n", "https://flask.palletsprojects.com/en/1.1.x/patterns/appfactories/", "\n\n", "\\`\\`\\", "`", "\n\n", "`", "python", "standard", "library", "`", "\n\n", "`", "import", "os", "`", "\n\n", "`", "third", "party", "library", "`", "\n\n", "`", "flask", "import", "flask", "`", "\n\n", "`", "dotenv", "import", "load_dotenv", "`", "\n\n", "`", "flask_login", "import", "loginmanager", "`", "\n\n", "`", "flask_cor", "import", "cor", "`", "\n\n", "`", "internal", "import", "`", "\n\n", "`", "login", "import", "login_page", "`", "\n\n", "`", "user", "import", "user", "`", "\n\n", "`", "load_dotenv", "`", "\n\n", "`", "flask", "app", "setup", "`", "\n\n", "`", "app", "=", "flask(__name", "`", "\n\n", "`", "app.secret_key", "=", "os.environ.get(\"secret_key", "os.urandom(24", "`", "\n\n", "`", "app.config['cors_header", "=", "content", "type", "`", "\n\n", "`", "user", "session", "management", "setup", "`", "\n\n", "`", "login_manager", "=", "loginmanager", "`", "\n\n", "`", "login_manager.init_app(app", "`", "\n\n", "`", "u", "login_manager.user_loader", "`", "\n\n", "`", "def", "load_user(user_id", "`", "\n\n", "`", "return", "user.get(user_id", "`", "\n\n", "`", "app.register_blueprint(login_page", "`", "\n\n", "`", "cors(app", "`", "\n\n", "`", "app.config['cors_header", "=", "content", "type", "`", "\n\n", "`", "name", "=", "=", "main", "`", "\n\n", "`", "app.run(host=\"localhost", "debug", "=", "true)\\", "`", "\n\n", "\\`\\`\\", "`", "\n\n", "please", "love", "god", "learn", "format", "code", "reddit", "use", "three", "backtick", "surround", "code", "\n\n", "woof", "\u2019ll", "look", "tomorrow", "\u2019m", "computer"]}, {"no_lemma_count": 20, "no_lemma": ["confirm", "none", "answers", "stack", "overflow", "work", "apparently", "flask", "responds", "options", "requires", "automatically", "flask", "cors", "n\u2019t", "anything", "\n\n", "found", "work", "around"], "with_lemma_count": 20, "with_lemma": ["confirm", "none", "answer", "stack", "overflow", "work", "apparently", "flask", "respond", "option", "require", "automatically", "flask", "cor", "not", "anything", "\n\n", "find", "work", "around"]}, {"no_lemma_count": 24, "no_lemma": ["n't", "seen", "cors", "applied", "directly", "blueprint", "still", "issue", "wrap", "root", "app", "cors", "function", "rather", "blueprint", "\n\n", "documentation", "need", " ", "wrap", "main", "application", "well", "blueprints"], "with_lemma_count": 24, "with_lemma": ["not", "see", "cor", "apply", "directly", "blueprint", "still", "issue", "wrap", "root", "app", "cor", "function", "rather", "blueprint", "\n\n", "documentation", "need", " ", "wrap", "main", "application", "well", "blueprint"]}, {"no_lemma_count": 32, "no_lemma": ["using", "create", "react", "app", "client", "think", "proxy", "functionality", "built", "scripts", "'s", "'ve", "personally", "solved", "\n\n", "ya", "used", "create", "react", "app", "client", "posts", "found", "google", "added", "line", "package.json", "also", "used", "command", "create", "client"], "with_lemma_count": 32, "with_lemma": ["use", "create", "react", "app", "client", "think", "proxy", "functionality", "build", "script", "be", "'ve", "personally", "solve", "\n\n", "ya", "use", "create", "react", "app", "client", "post", "find", "google", "add", "line", "package.json", "also", "use", "command", "create", "client"]}, {"no_lemma_count": 360, "no_lemma": ["use", "nginx", "optionally", "docker", "save", "hassle", "imo", "'ve", "similar", "problem", "recently", "solved", "way", "vue", "app", "sending", "pre", "flight", "options", "request", "flask", "n't", "respond", "access", "control", "allow", "origin", "header", "even", "tho", "using", "flask", "cors", "\n\n", "scrap", "flask", "cors", "library", "together", "\n\n", "yup", "n't", "need", "everything", "coming", "origin", "\n\n", "okay", "thanks", "'ll", "try", "learn", "nginx", "works", "hopefully", "leave", "thread", "\n\n", "'s", "hard", "'ll", "probably", "need", "learn", "anyway", "want", "deploy", "app", "'re", "wasting", "time", "fun", "\n\n", "hey", "wondering", "could", "point", "right", "direction", "using", "nginx", "docker", "'ve", "followed", "many", "guides", "'m", "still", "running", "cors", "update", "original", "stack", "overflow", "post", "show", "far", "\n\n", "x200b", "\n\n", "https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask](https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask", "\n\n", "try", "running", "react", "port", "3000", "docker", "compose", "section", "react", "set", "\n\n    ", "ports", "\n      ", "3000:3000", "\n\n", "nginx", "config", "set", "\n\n    ", "proxy_pass", "         ", "http://react", "client:3000", "\n\n", "'m", "sure", "configured", "containers", "`", "3000:80", "`", "means", "port", "`", "80", "`", "inside", "container", "maps", "port", "`", "3000", "`", "host", "machine", "'re", "using", "ports", "anything", "nginx", "'s", "better", "use", "`", "expose", "`", "instruction", "instead", "`", "ports", "`", "\n\n", "also", "'re", "supposed", "access", "frontend", "`", "localhost:80", "`", "`", "localhost:3000", "`", "\n\n", "tried", "changes", "get", "bad", "gateway", "error", "also", "proxy\\_pass", "portion", "work", "example", "proxy\\_pass", "http://react", "client:3000](http://react", "client:3000", "root", "url", "would", "entire", "url", "change", "mean", "would", "process", "something", "similar", "making", "request", "say", "localhost:5000", "instead", "localhost:3000", "\n\n", "damn", "weird", "stuff", "check", "logs", "say", "\n\n", "proxy_pass", "links", "nginx", "location", "provided", "app", "example", "\n\n    ", "location", "/login", "\n        ", "proxy_pass", "         ", "http://flask", "backend:5000", "\n    ", "\n\n", "`", "/login", "`", "url", "would", "redirect", "port", "`", "5000", "`", "hostname", "`", "flask", "backend", "`", "afaik", "docker", "compose", "manages", "hostnames", "default", "'re", "container", "names", "hostnames", "work", "automatically", "need", "ports", "match", "docker", "containers", "expose", "\n\n", "could", "also", "theoretically", "point", "remote", "server", "user", "would", "still", "appear", "'s", "coming", "domain", "'s", "solves", "cors", "stuff", "\n\n", "host", "machine", "'re", "accessing", "nginx", "port", "`", "80", "`", "'s", "place", "nginx", "handle", "requests", "uses", "appropriate", "proxies", "etc", "'re", "still", "accessing", "frontend", "via", "port", "`", "3000", "`", "'s", "handled", "directly", "react", "built", "development", "server", "still", "get", "cors", "errors", "frontend", "port", "3000", "'s", "calling", "backend", "port", "5000", "cors", "errors", "disappear", "everything", "must", "originate", "hostname", "port", "\n\n", "ya", "previously", "well", "seemed", "fix", "cors", "issue", "creating", "upstream", "updated", "version", "config", "files", "\n\n", "https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask](https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask", "\n\n", "still", "working", "though", "unfortunately"], "with_lemma_count": 360, "with_lemma": ["use", "nginx", "optionally", "docker", "save", "hassle", "imo", "'ve", "similar", "problem", "recently", "solve", "way", "vue", "app", "send", "pre", "flight", "option", "request", "flask", "not", "respond", "access", "control", "allow", "origin", "header", "even", "tho", "use", "flask", "cor", "\n\n", "scrap", "flask", "cor", "library", "together", "\n\n", "yup", "not", "need", "everything", "come", "origin", "\n\n", "okay", "thank", "will", "try", "learn", "nginx", "work", "hopefully", "leave", "thread", "\n\n", "be", "hard", "will", "probably", "need", "learn", "anyway", "want", "deploy", "app", "be", "waste", "time", "fun", "\n\n", "hey", "wonder", "could", "point", "right", "direction", "use", "nginx", "docker", "'ve", "follow", "many", "guide", "be", "still", "run", "cor", "update", "original", "stack", "overflow", "post", "show", "far", "\n\n", "x200b", "\n\n", "https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask](https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask", "\n\n", "try", "run", "react", "port", "3000", "docker", "compose", "section", "react", "set", "\n\n    ", "port", "\n      ", "3000:3000", "\n\n", "nginx", "config", "set", "\n\n    ", "proxy_pass", "         ", "http://react", "client:3000", "\n\n", "be", "sure", "configure", "container", "`", "3000:80", "`", "mean", "port", "`", "80", "`", "inside", "container", "map", "port", "`", "3000", "`", "host", "machine", "be", "use", "port", "anything", "nginx", "be", "well", "use", "`", "expose", "`", "instruction", "instead", "`", "port", "`", "\n\n", "also", "be", "suppose", "access", "frontend", "`", "localhost:80", "`", "`", "localhost:3000", "`", "\n\n", "try", "change", "get", "bad", "gateway", "error", "also", "proxy\\_pass", "portion", "work", "example", "proxy\\_pass", "http://react", "client:3000](http://react", "client:3000", "root", "url", "would", "entire", "url", "change", "mean", "would", "process", "something", "similar", "make", "request", "say", "localhost:5000", "instead", "localhost:3000", "\n\n", "damn", "weird", "stuff", "check", "log", "say", "\n\n", "proxy_pass", "link", "nginx", "location", "provide", "app", "example", "\n\n    ", "location", "/login", "\n        ", "proxy_pass", "         ", "http://flask", "backend:5000", "\n    ", "\n\n", "`", "/login", "`", "url", "would", "redirect", "port", "`", "5000", "`", "hostname", "`", "flask", "backend", "`", "afaik", "docker", "compose", "manage", "hostname", "default", "be", "container", "name", "hostname", "work", "automatically", "need", "port", "match", "docker", "container", "expose", "\n\n", "could", "also", "theoretically", "point", "remote", "server", "user", "would", "still", "appear", "be", "come", "domain", "be", "solve", "cor", "stuff", "\n\n", "host", "machine", "be", "access", "nginx", "port", "`", "80", "`", "be", "place", "nginx", "handle", "request", "use", "appropriate", "proxy", "etc", "be", "still", "access", "frontend", "via", "port", "`", "3000", "`", "be", "handle", "directly", "react", "build", "development", "server", "still", "get", "cor", "error", "frontend", "port", "3000", "be", "call", "backend", "port", "5000", "cor", "error", "disappear", "everything", "must", "originate", "hostname", "port", "\n\n", "ya", "previously", "well", "seem", "fix", "cor", "issue", "create", "upstream", "update", "version", "config", "file", "\n\n", "https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask](https://stackoverflow.com/questions/65503432/running-into-issues-with-cors-with-flask", "\n\n", "still", "work", "though", "unfortunately"]}, {"no_lemma_count": 16, "no_lemma": ["get", "rid", "proxy", "wrap", "app", "factory", "cors", "flask", "cors", "'ll", "open", "cors", "policy", "allow", "origin", "work"], "with_lemma_count": 16, "with_lemma": ["get", "rid", "proxy", "wrap", "app", "factory", "cor", "flask", "cor", "will", "open", "cor", "policy", "allow", "origin", "work"]}, {"no_lemma_count": 182, "no_lemma": ["sure", "\u2019re", "trying", "similar", "issue", "wanted", "flask", "+", "react", "cors", "wanted", "local", "development", "plus", "team", "dockerized", "used", "nginx", "reverse", "proxy", "still", "issue", "using", "okta", "login", "removing", "cors", "n\u2019t", "option", "\n\n", "issue", "https", "hard", "requirement", "things", "simply", "would", "n\u2019t", "work", "without", "fake", "self", "signed", "certificates", "okta", "n\u2019t", "needed", "real", "certs", "registered", "domain", "get", "free", "certbot", "nobody", "going", "give", "certs", "localhost", "even", "spin", "ec2", "instance", "aws", "equivalent", "whoever", "still", "ca", "n\u2019t", "get", "aws", "cloud", "provider", "url", "since", "ip", "\u2019s", "change", "hands", "frequently", "\n\n", "worked", "use", "subdomain", "domain", "already", "owned", "namecheap", "whoever", "spin", "ec2", "instance", "smallest", "i.e.", "t2.micro", "fine", "set", "elastic", "ip", "register", "namecheap", "fire", "nginx", "also", "used", "simple", "hello", "world", "flask", "app", "sure", "working", "use", "certbot", "get", "proper", "certificates", "make", "sure", "reach", "site", "via", "https", "\u2019ve", "modified", "nginx.conf", "file", "appropriately", "\n\n", "certs", "get", "local", "shut", "instance", "last", "thing", "need", "add", "line", "/etc", "hosts", "file", "setting", "127.0.0.1", "point", "subdomain", "tricks", "machine", "thinking", "\u2019s", "hitting", "internet", "handle", "https", "issues", "ngninx.conf", "file", "work", "used", "instance", "\n\n", "check", "get", "hello", "world", "flask", "app", "via", "https", "hitting", "subdomain", "good", "go", "actual", "flask", "+", "react", "app", "includes", "nginx", "ideally", "dockerized"], "with_lemma_count": 182, "with_lemma": ["sure", "\u2019re", "try", "similar", "issue", "want", "flask", "+", "react", "cor", "want", "local", "development", "plus", "team", "dockerize", "use", "nginx", "reverse", "proxy", "still", "issue", "use", "okta", "login", "remove", "cor", "not", "option", "\n\n", "issue", "https", "hard", "requirement", "thing", "simply", "would", "not", "work", "without", "fake", "self", "sign", "certificate", "okta", "not", "need", "real", "cert", "registered", "domain", "get", "free", "certbot", "nobody", "go", "give", "cert", "localhost", "even", "spin", "ec2", "instance", "aw", "equivalent", "whoever", "still", "can", "not", "get", "aws", "cloud", "provider", "url", "since", "ip", "\u2019s", "change", "hand", "frequently", "\n\n", "work", "use", "subdomain", "domain", "already", "own", "namecheap", "whoever", "spin", "ec2", "instance", "small", "i.e.", "t2.micro", "fine", "set", "elastic", "ip", "register", "namecheap", "fire", "nginx", "also", "use", "simple", "hello", "world", "flask", "app", "sure", "work", "use", "certbot", "get", "proper", "certificate", "make", "sure", "reach", "site", "via", "https", "\u2019ve", "modify", "nginx.conf", "file", "appropriately", "\n\n", "cert", "get", "local", "shut", "instance", "last", "thing", "need", "add", "line", "/etc", "host", "file", "set", "127.0.0.1", "point", "subdomain", "trick", "machine", "think", "\u2019s", "hit", "internet", "handle", "https", "issue", "ngninx.conf", "file", "work", "use", "instance", "\n\n", "check", "get", "hello", "world", "flask", "app", "via", "https", "hit", "subdomain", "good", "go", "actual", "flask", "+", "react", "app", "include", "nginx", "ideally", "dockerize"]}, {"no_lemma_count": 19, "no_lemma": ["reason", "'re", "using", "cors", "cors", "usually", "used", "sharing", "resources", "different", "domains", "long", "apps", "running", "local", "server", "need", "use", "cors"], "with_lemma_count": 19, "with_lemma": ["reason", "be", "use", "cor", "cor", "usually", "use", "share", "resource", "different", "domain", "long", "app", "run", "local", "server", "need", "use", "cor"]}, {"no_lemma_count": 42, "no_lemma": ["sending", "request", "front", "end", "browser", "blocking", "need", "enable", "back", "end", "send", "requests", "back", "end", "pull", "front", "end", "\n\n", "add", "must", "read", "article", "cors", "https://developer.mozilla.org/en-us/docs/web/http/cors", "\n\n", "read", "entirety", "times", "look", "resources", "n't", "know", "anything", "mentioned", "cors", "important", "aspect", "web", "dev", "got", "ta", "learn"], "with_lemma_count": 42, "with_lemma": ["send", "request", "front", "end", "browser", "block", "need", "enable", "back", "end", "send", "request", "back", "end", "pull", "front", "end", "\n\n", "add", "must", "read", "article", "cor", "https://developer.mozilla.org/en-us/docs/web/http/cor", "\n\n", "read", "entirety", "time", "look", "resource", "not", "know", "anything", "mention", "cor", "important", "aspect", "web", "dev", "got", "to", "learn"]}, {"no_lemma_count": 74, "no_lemma": ["ran", "issue", "running", "app", "google", "app", "engine", "front", "end", "sending", "one", "address", "back", "end", "receiving", "different", "address", "point", "system", "prevent", "back", "end", "receiving", "request", "kinds", "different", "front", "ends", "malicious", "solved", "issue", "making", "destination", "source", "url", "may", "something", "running", "well", "'ve", "got", "local", "hosts", "somewhere", "somewhere", "else", "'re", "receiving", "different", "url", "workaround", "seeing", "x", "forwarder", "header", "'s", "bad", "practice", "unless", "absolutely", "necessary", "\n\n", "thanks", "found", "issue", "correct", "backend", "front", "end", "running", "different", "ports", "\n\n", "https://giphy.com/gifs/yes-napoleon-dynamite-fist-89x4oseodheoo"], "with_lemma_count": 74, "with_lemma": ["run", "issue", "run", "app", "google", "app", "engine", "front", "end", "send", "one", "address", "back", "end", "receive", "different", "address", "point", "system", "prevent", "back", "end", "receive", "request", "kind", "different", "front", "end", "malicious", "solve", "issue", "make", "destination", "source", "url", "may", "something", "run", "well", "'ve", "get", "local", "host", "somewhere", "somewhere", "else", "be", "receive", "different", "url", "workaround", "see", "x", "forwarder", "header", "be", "bad", "practice", "unless", "absolutely", "necessary", "\n\n", "thank", "find", "issue", "correct", "backend", "front", "end", "run", "different", "port", "\n\n", "https://giphy.com/gifs/yes-napoleon-dynamite-fist-89x4oseodheoo"]}, {"no_lemma_count": 46, "no_lemma": ["n't", "know", "details", "cors", "rules", "around", "response", "codes", "300s", "read", "make", "sure", "'re", "correctly", "\n\n", "simple", "way", "think", "could", "test", "return", "string", "instead", "redirect", "see", "browser", "receives", "payload", "without", "error", "'ll", "know", "'s", "something", "specific", "redirect", "redirect", "youtube", "'d", "handle", "front", "end", "use", "backend", "serving", "content"], "with_lemma_count": 46, "with_lemma": ["not", "know", "detail", "cor", "rule", "around", "response", "code", "300s", "read", "make", "sure", "be", "correctly", "\n\n", "simple", "way", "think", "could", "test", "return", "string", "instead", "redirect", "see", "browser", "receive", "payload", "without", "error", "will", "know", "be", "something", "specific", "redirect", "redirect", "youtube", "would", "handle", "front", "end", "use", "backend", "serve", "content"]}, {"no_lemma_count": 25, "no_lemma": ["respond", "header", "need", "set", "access", "contol", "allow", "origin", "domain", "check", "https://stackoverflow.com/questions/25594893/how-to-enable-cors-in-flask", "\n\n", "hi", "u", "donjuan1337", "  \n\n\n", "thank", "worked", "june", "2023", " \n\n\n", "need", "add", "cors", "http:/localhost:3000"], "with_lemma_count": 25, "with_lemma": ["respond", "header", "need", "set", "access", "contol", "allow", "origin", "domain", "check", "https://stackoverflow.com/questions/25594893/how-to-enable-cors-in-flask", "\n\n", "hi", "u", "donjuan1337", "  \n\n\n", "thank", "work", "june", "2023", " \n\n\n", "need", "add", "cor", "http:/localhost:3000"]}, {"no_lemma_count": 9, "no_lemma": ["ever", "find", "solution", "\n\n", "\n\n", "\n\n", "switched", "fast", "api"], "with_lemma_count": 9, "with_lemma": ["ever", "find", "solution", "\n\n", "\n\n", "\n\n", "switch", "fast", "api"]}, {"no_lemma_count": 618, "no_lemma": ["tunnel", "flask", "app", "ngrok", "origin", "request", "effectively", "changed", "local", "flask", "server", "ngrok", "url", "even", "'ve", "set", "cors", "allow", "origins", "`", "origins=", "`", "still", "issues", "'s", "inconsistency", "front", "end", "back", "end", "handle", "requests", "\n\n", "troubleshooting", "steps", "\n\n", "1", "check", "exact", "error", "message", "make", "sure", "error", "directly", "related", "cors", "error", "browser", "'s", "developer", "console", "provide", "details", "cors", "error", "header", "missing", "incorrect", "\n\n", "2", "explicitly", "specify", "ngrok", "url", "`", "origins", "`", "instead", "using", "wildcard", "`", "`", "explicitly", "list", "ngrok", "url", "see", "solves", "issue", "\n   \n   ", "`", "`", "`", "python", "\n   ", "allowed_origins", "=", "http://your-ngrok-subdomain.ngrok.io", "\n   ", "cors(app", "supports_credentials", "=", "true", "origins", "=", "allowed_origins", "\n   ", "`", "`", "`", "\n\n", "3", "handle", "preflight", "requests", "ensure", "'re", "correctly", "handling", "cors", "preflight", "`", "options", "`", "requests", "flask", "cors", "handle", "'s", "middleware", "route", "'s", "intercepting", "requests", "might", "handled", "properly", "\n\n", "4", "use", "`", "https", "`", "flask", "ngrok", "flask", "app", "running", "`", "https", "`", "make", "sure", "'re", "also", "using", "`", "https", "`", "protocol", "ngrok", "ensures", "protocols", "match", "\n\n", "5", "inspect", "headers", "using", "tools", "like", "postman", "browser", "'s", "developer", "console", "inspect", "headers", "request", "response", "ensure", "`", "access", "control", "allow", "origin", "`", "header", "present", "correctly", "set", "response", "\n\n", "6", "update", "flask", "cors", "ensure", "'re", "using", "latest", "version", "flask", "cors", "sometimes", "bugs", "fixed", "newer", "releases", "\n\n", "7", "check", "middleware", "interferes", "middlewares", "flask", "app", "ensure", "'re", "interfering", "flask", "cors", "modifying", "headers", "way", "\n\n", "8", "logs", "debug", "use", "flask", "'s", "debug", "mode", "check", "ngrok", "'s", "web", "interface", "usually", "available", "`", "http://localhost:4040", "`", "request", "logs", "give", "insights", "'s", "going", "wrong", "\n\n", "trying", "steps", "'re", "still", "encountering", "issues", "consider", "sharing", "exact", "cors", "error", "message", "related", "request", "response", "headers", "assistance", "\n\n", "hey", " ", "edited", "question", "edit", "2", "please", "look", "addressed", "got", "anything", "else", "could", "thanks", "lot", " \n", "also", "setting", "origins", "ngrok", "would", "n't", "make", "sense", "backend", "ngrok", "frontent", "want", "backend", "ngrok", "accept", "frontend", "\n\n", "teach", "\n\n", "error", "message", "states", "server", "n't", "sending", "`", "access", "control", "allow", "origin", "`", "header", "response", "let", "'s", "break", "find", "solution", "\n\n", "1", "protocol", "mismatch", "even", "though", "mentioned", "edit", "1", "using", "http", "flask", "ngrok", "still", "results", "cors", "error", "'s", "important", "aware", "browsers", "consider", "http", "https", "different", "origins", "said", "error", "message", "points", "backend", "ngrok", "url", "https", "frontend", "http", "alone", "lead", "cors", "issues", "\n\n", "2", "flask", "cors", "wildcard", "credentials", "\n\n", "set", "origins", "`", "`", "time", "`", "supports_credentials", "=", "true", "`", "cause", "problems", "browsers", "allow", "wildcards", "credentials", "instead", "wildcard", "need", "specify", "actual", "origin", "\n\n", "`", "`", "`", "python", "cors(app", "supports_credentials", "=", "true", "origins=[\"http://192.168.1.140:5173", "`", "`", "`", "\n\n", "3", "multiple", "origins", "\n\n", "multiple", "origins", "dynamically", "set", "origin", "based", "request", "\n\n", "`", "`", "`", "python", "def", "cors_origin(response", "\n    ", "request_origin", "=", "request.headers.get('origin", "\n    ", "valid_origins", "=", "http://192.168.1.140:5173", "http://your-ngrok-subdomain.ngrok.io", "\n    ", "request_origin", "valid_origins", "\n        ", "response.headers.add(\"access", "control", "allow", "origin", "request_origin", "\n    ", "return", "response", "\n\n", "app.after_request(cors_origin", "`", "`", "`", "\n\n", "4", "handling", "preflight", "requests", "\n\n", "error", "message", "indicates", "problem", "preflight", "`", "options", "`", "request", "make", "sure", "server", "responds", "correctly", "`", "options", "`", "request", "might", "need", "handle", "manually", "\n\n", "`", "`", "`", "python", "@app.route('/your", "endpoint", "methods=['options", "def", "options", "\n    ", "response", "=", "flask.make_response", "\n    ", "response.headers.add(\"access", "control", "allow", "origin", "http://192.168.1.140:5173", "\n    ", "response.headers.add(\"access", "control", "allow", "methods", "get", "post", "options", "\n    ", "response.headers.add(\"access", "control", "allow", "headers", "content", "type", "authorization", "\n    ", "response.headers.add(\"access", "control", "allow", "credentials", "true", "\n    ", "return", "response", "`", "`", "`", "\n\n", "5", "ngrok", "headers", "\n\n", "ngrok", "may", "modifying", "headers", "passing", "along", "expected", "test", "manually", "proxying", "requests", "using", "tools", "like", "postman", "examining", "headers", "stage", "see", "'re", "getting", "stripped", "altered", "\n\n", "6", "flask", "middlewares", "\n\n", "middlewares", "flask", "app", "ensure", "n't", "running", "flask", "cors", "modifying", "headers", "nullify", "cors", "headers", "\n\n", "7", "debugging", "\n\n", "use", "logging", "flask", "log", "incoming", "headers", "response", "headers", "provide", "insights", "headers", "received", "'s", "sent", "back", "\n\n", "conclusion", "\n\n", "key", "ensure", "server", "responding", "proper", "cors", "headers", "preflight", "actual", "requests", "pay", "special", "attention", "wildcard", "credentials", "issue", "app", "still", "showing", "cors", "errors", "changes", "consider", "setting", "simpler", "version", "app", "without", "additional", "middlewares", "narrow", "issue"], "with_lemma_count": 618, "with_lemma": ["tunnel", "flask", "app", "ngrok", "origin", "request", "effectively", "change", "local", "flask", "server", "ngrok", "url", "even", "'ve", "set", "cor", "allow", "origin", "`", "origins=", "`", "still", "issue", "be", "inconsistency", "front", "end", "back", "end", "handle", "request", "\n\n", "troubleshooting", "step", "\n\n", "1", "check", "exact", "error", "message", "make", "sure", "error", "directly", "relate", "cor", "error", "browser", "'s", "developer", "console", "provide", "detail", "cor", "error", "header", "miss", "incorrect", "\n\n", "2", "explicitly", "specify", "ngrok", "url", "`", "origin", "`", "instead", "use", "wildcard", "`", "`", "explicitly", "list", "ngrok", "url", "see", "solve", "issue", "\n   \n   ", "`", "`", "`", "python", "\n   ", "allowed_origin", "=", "http://your-ngrok-subdomain.ngrok.io", "\n   ", "cors(app", "supports_credential", "=", "true", "origin", "=", "allowed_origin", "\n   ", "`", "`", "`", "\n\n", "3", "handle", "preflight", "request", "ensure", "be", "correctly", "handle", "cor", "preflight", "`", "option", "`", "request", "flask", "cor", "handle", "be", "middleware", "route", "be", "intercept", "request", "might", "handle", "properly", "\n\n", "4", "use", "`", "https", "`", "flask", "ngrok", "flask", "app", "run", "`", "https", "`", "make", "sure", "be", "also", "use", "`", "https", "`", "protocol", "ngrok", "ensure", "protocol", "match", "\n\n", "5", "inspect", "header", "use", "tool", "like", "postman", "browser", "'s", "developer", "console", "inspect", "header", "request", "response", "ensure", "`", "access", "control", "allow", "origin", "`", "header", "present", "correctly", "set", "response", "\n\n", "6", "update", "flask", "cor", "ensure", "be", "use", "late", "version", "flask", "cor", "sometimes", "bug", "fix", "new", "release", "\n\n", "7", "check", "middleware", "interfere", "middleware", "flask", "app", "ensure", "be", "interfere", "flask", "cor", "modify", "header", "way", "\n\n", "8", "log", "debug", "use", "flask", "'s", "debug", "mode", "check", "ngrok", "'s", "web", "interface", "usually", "available", "`", "http://localhost:4040", "`", "request", "log", "give", "insight", "be", "go", "wrong", "\n\n", "try", "step", "be", "still", "encounter", "issue", "consider", "share", "exact", "cor", "error", "message", "related", "request", "response", "header", "assistance", "\n\n", "hey", " ", "edit", "question", "edit", "2", "please", "look", "address", "get", "anything", "else", "could", "thank", "lot", " \n", "also", "set", "origin", "ngrok", "would", "not", "make", "sense", "backend", "ngrok", "frontent", "want", "backend", "ngrok", "accept", "frontend", "\n\n", "teach", "\n\n", "error", "message", "state", "server", "not", "send", "`", "access", "control", "allow", "origin", "`", "header", "response", "let", "us", "break", "find", "solution", "\n\n", "1", "protocol", "mismatch", "even", "though", "mention", "edit", "1", "use", "http", "flask", "ngrok", "still", "result", "cor", "error", "be", "important", "aware", "browser", "consider", "http", "https", "different", "origin", "say", "error", "message", "point", "backend", "ngrok", "url", "https", "frontend", "http", "alone", "lead", "cor", "issue", "\n\n", "2", "flask", "cor", "wildcard", "credential", "\n\n", "set", "origin", "`", "`", "time", "`", "supports_credential", "=", "true", "`", "cause", "problem", "browser", "allow", "wildcard", "credential", "instead", "wildcard", "need", "specify", "actual", "origin", "\n\n", "`", "`", "`", "python", "cors(app", "supports_credential", "=", "true", "origins=[\"http://192.168.1.140:5173", "`", "`", "`", "\n\n", "3", "multiple", "origin", "\n\n", "multiple", "origin", "dynamically", "set", "origin", "base", "request", "\n\n", "`", "`", "`", "python", "def", "cors_origin(response", "\n    ", "request_origin", "=", "request.headers.get('origin", "\n    ", "valid_origin", "=", "http://192.168.1.140:5173", "http://your-ngrok-subdomain.ngrok.io", "\n    ", "request_origin", "valid_origin", "\n        ", "response.headers.add(\"access", "control", "allow", "origin", "request_origin", "\n    ", "return", "response", "\n\n", "app.after_request(cors_origin", "`", "`", "`", "\n\n", "4", "handle", "preflight", "request", "\n\n", "error", "message", "indicate", "problem", "preflight", "`", "option", "`", "request", "make", "sure", "server", "respond", "correctly", "`", "option", "`", "request", "might", "need", "handle", "manually", "\n\n", "`", "`", "`", "python", "@app.route('/your", "endpoint", "methods=['option", "def", "option", "\n    ", "response", "=", "flask.make_response", "\n    ", "response.headers.add(\"access", "control", "allow", "origin", "http://192.168.1.140:5173", "\n    ", "response.headers.add(\"access", "control", "allow", "method", "get", "post", "option", "\n    ", "response.headers.add(\"access", "control", "allow", "header", "content", "type", "authorization", "\n    ", "response.headers.add(\"access", "control", "allow", "credential", "true", "\n    ", "return", "response", "`", "`", "`", "\n\n", "5", "ngrok", "header", "\n\n", "ngrok", "may", "modify", "header", "pass", "along", "expect", "test", "manually", "proxye", "request", "use", "tool", "like", "postman", "examine", "header", "stage", "see", "be", "getting", "strip", "alter", "\n\n", "6", "flask", "middleware", "\n\n", "middleware", "flask", "app", "ensure", "not", "run", "flask", "cor", "modify", "header", "nullify", "cor", "header", "\n\n", "7", "debugging", "\n\n", "use", "log", "flask", "log", "incoming", "header", "response", "header", "provide", "insight", "header", "receive", "be", "send", "back", "\n\n", "conclusion", "\n\n", "key", "ensure", "server", "respond", "proper", "cor", "header", "preflight", "actual", "request", "pay", "special", "attention", "wildcard", "credential", "issue", "app", "still", "show", "cor", "error", "change", "consider", "set", "simple", "version", "app", "without", "additional", "middleware", "narrow", "issue"]}, {"no_lemma_count": 137, "no_lemma": ["make", "sure", "get", "option", "endpoints", "posting", "putting", " ", "flask", "uses", "get", "request", "option", "requests", " ", "normal", "browser", "make", "options", "request", " ", "make", "sure", "setting", "correct", "cors", "headers", "get", "requests", "many", "ways", " ", "manually", "get", "request", "middleware", "using", "something", "like", "flask", "cors", "using", "reverse", "proxy", "http", "load", "balancer", "cdns", "like", "cloud", "flare", " ", "preference", "handle", "cors", "outside", "application", "usually", "http", "aware", "reverse", "proxy", "like", "nginx", " ", "n\u2019t", "allow", "\n\n", "thanks", "quick", "reply", "already", "tried", "nginx", "reverse", "proxy", "seem", "work", "even", "setting", "proxy_pass", "directives", "necessary", "headers", "per", "documentation", " ", "say", "need", "get", "request", "views", "post", "put", "methods", "get", "needs", "return", "204", "\n\n", "get", "needs", "return", "cors", "headers", "endpoint", " ", "flask", "default", "return", "body", "handling", "option", "requests", "get", " ", "status", "code", "ever", "would", "normal", "get", "200", " ", "flask", "make", "204", "automatically", "using", "option", "requests", "\n\n", "ok", "makes", "sense", "give", "try"], "with_lemma_count": 137, "with_lemma": ["make", "sure", "get", "option", "endpoint", "post", "put", " ", "flask", "use", "get", "request", "option", "request", " ", "normal", "browser", "make", "option", "request", " ", "make", "sure", "set", "correct", "cor", "header", "get", "request", "many", "way", " ", "manually", "get", "request", "middleware", "use", "something", "like", "flask", "cor", "use", "reverse", "proxy", "http", "load", "balancer", "cdns", "like", "cloud", "flare", " ", "preference", "handle", "cor", "outside", "application", "usually", "http", "aware", "reverse", "proxy", "like", "nginx", " ", "not", "allow", "\n\n", "thank", "quick", "reply", "already", "try", "nginx", "reverse", "proxy", "seem", "work", "even", "set", "proxy_pass", "directive", "necessary", "header", "per", "documentation", " ", "say", "need", "get", "request", "view", "post", "put", "method", "get", "need", "return", "204", "\n\n", "get", "need", "return", "cor", "header", "endpoint", " ", "flask", "default", "return", "body", "handle", "option", "request", "get", " ", "status", "code", "ever", "would", "normal", "get", "200", " ", "flask", "make", "204", "automatically", "use", "option", "request", "\n\n", "ok", "make", "sense", "give", "try"]}, {"no_lemma_count": 41, "no_lemma": ["exact", "cors", "error", "reported", "browser", "options", "response", "\n\n", "`", "before_request", "`", "function", "'s", "authentication", "needs", "exempted", "options", "requests", "\n\n", "preflight", "request", "respond", "http", "ok", "status", "\n\n", "apparently", "issue", "request", "handler", "authorization", "returning", "401", "preflight", "options", "request", "fixed", "cors", "issue", "got", "resolved"], "with_lemma_count": 41, "with_lemma": ["exact", "cor", "error", "report", "browser", "option", "response", "\n\n", "`", "before_requ", "`", "function", "be", "authentication", "need", "exempt", "option", "request", "\n\n", "preflight", "request", "respond", "http", "ok", "status", "\n\n", "apparently", "issue", "request", "handler", "authorization", "return", "401", "preflight", "option", "request", "fix", "cor", "issue", "got", "resolve"]}, {"no_lemma_count": 270, "no_lemma": ["ohh", "btw", "already", "using", "infamous", "cors(app", "bunch", "configurations", "still", "n't", "seem", "work", "\n\n", "give", "example", "configuration", "\n\n", "configuration", " \n", "app.config\\[\"cors\\_supports\\_credentials\"\\", "=", "true", "\n\n", "app.config\\[\"cors\\_allow\\_headers\"\\", "=", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "requested", "\n\n", "modified", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "app.config\\[\"cors\\_expose\\_headers\"\\", "=", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "requested", "\n\n", "modified", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "app.config\\[\"cors\\_origins\"\\", "=", "<", "localhost", "ip", "port", ">", "\n\n", "app.config\\[\"cors\\_headers\"\\", "=", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "requested", "\n\n", "modified", "since", "\n\n", "cache", "control", "\n\n", "content", "type", "\n\n", "\n\n", "cors([app.app](https://app.app", "\n\n", "cors", "\n\n", "app", "\n\n", "resources=", "\n\n", "r\"/api/<endpoint-1", ">", "\n\n", "origins", "<", "localhost", "-ip", "port", ">", "\n\n", "allow\\_headers", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "requested", "\n\n", "modified", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "expose\\_headers", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "requested", "\n\n", "modified", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "supports\\_credentials", "true", "\n\n", "headers", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "requested", "\n\n", "modified", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "\n\n", "r\"/api/<endpoint-2", ">", "\n\n", "origins", "<", "localhost", "ip", "port", ">", "\n\n", "allow\\_headers", "\\[\"content", "type", "authorization\"\\", "\n\n", "expose\\_headers", "\\[\"content", "type", "authorization\"\\", "\n\n", "supports\\_credentials", "true", "\n\n", "\n\n", "r\"/api/\\", "\n\n", "origins", "<", "localhost", "ip", "port", ">", "\n\n", "allow\\_headers", "\\[\"content", "type", "authorization\"\\", "\n\n", "expose\\_headers", "\\[\"content", "type", "authorization\"\\", "\n\n", "supports\\_credentials", "true", "\n\n", "\n\n", "\n\n"], "with_lemma_count": 270, "with_lemma": ["ohh", "btw", "already", "use", "infamous", "cors(app", "bunch", "configuration", "still", "not", "seem", "work", "\n\n", "give", "example", "configuration", "\n\n", "configuration", " \n", "app.config\\[\"cors\\_supports\\_credentials\"\\", "=", "true", "\n\n", "app.config\\[\"cors\\_allow\\_headers\"\\", "=", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "request", "\n\n", "modify", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "app.config\\[\"cors\\_expose\\_headers\"\\", "=", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "request", "\n\n", "modify", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "app.config\\[\"cors\\_origins\"\\", "=", "<", "localhost", "ip", "port", ">", "\n\n", "app.config\\[\"cors\\_headers\"\\", "=", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "request", "\n\n", "modify", "since", "\n\n", "cache", "control", "\n\n", "content", "type", "\n\n", "\n\n", "cors([app.app](https://app.app", "\n\n", "cor", "\n\n", "app", "\n\n", "resources=", "\n\n", "r\"/api/<endpoint-1", ">", "\n\n", "origin", "<", "localhost", "-ip", "port", ">", "\n\n", "allow\\_header", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "request", "\n\n", "modify", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "expose\\_headers", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "request", "\n\n", "modify", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "supports\\_credentials", "true", "\n\n", "header", "\n\n", "content", "type", "\n\n", "authorization", "\n\n", "dnt", "\n\n", "x", "customheader", "\n\n", "keep", "alive", "\n\n", "user", "agent", "\n\n", "x", "request", "\n\n", "modify", "since", "\n\n", "cache", "control", "\n\n", "\n\n", "\n\n", "r\"/api/<endpoint-2", ">", "\n\n", "origin", "<", "localhost", "ip", "port", ">", "\n\n", "allow\\_header", "\\[\"content", "type", "authorization\"\\", "\n\n", "expose\\_headers", "\\[\"content", "type", "authorization\"\\", "\n\n", "supports\\_credentials", "true", "\n\n", "\n\n", "r\"/api/\\", "\n\n", "origin", "<", "localhost", "ip", "port", ">", "\n\n", "allow\\_header", "\\[\"content", "type", "authorization\"\\", "\n\n", "expose\\_headers", "\\[\"content", "type", "authorization\"\\", "\n\n", "supports\\_credentials", "true", "\n\n", "\n\n", "\n\n"]}, {"no_lemma_count": 22, "no_lemma": ["okay", "got", "error", "like", "coz", "wrong", "endpoints", "gave", "frontend", "deployed", "server", "frontend", "still", "pointing", "localhost", "\n\n", "makes", "option", "request", "fails", "try", "checking"], "with_lemma_count": 22, "with_lemma": ["okay", "get", "error", "like", "coz", "wrong", "endpoint", "give", "frontend", "deploy", "server", "frontend", "still", "point", "localhost", "\n\n", "make", "option", "request", "fail", "try", "check"]}, {"no_lemma_count": 12, "no_lemma": ["\r\n    ", "solved", "self", "removing", "property", "httpclienthandler", "class", "c", "\n\r\n", "usedefaultcredentials", "=", "true"], "with_lemma_count": 12, "with_lemma": ["\r\n    ", "solve", "self", "remove", "property", "httpclienthandler", "class", "c", "\n\r\n", "usedefaultcredential", "=", "true"]}, {"no_lemma_count": 13, "no_lemma": ["\r\n    ", "try", "using", "correct", "quotes", "python", "\n\r\n", "payload", "=", "logintype\":\"sina\",\"externalcode", "+", "x", "+"], "with_lemma_count": 13, "with_lemma": ["\r\n    ", "try", "use", "correct", "quote", "python", "\n\r\n", "payload", "=", "logintype\":\"sina\",\"externalcode", "+", "x", "+"]}, {"no_lemma_count": 38, "no_lemma": ["\r\n    ", "attempt", "find", "web", "servers", "machine", "would", "treated", "startedcommand", "\n\r\n", "$", "winpty", "python", "-m", "http.server", "5000(found", "somwhere", "internet", "triggered", "firewall", "tell", "blocked", "python.exe", "ask", "continue", "negated", "python", "based", "web", "server", "worked", "well", "time", "flask-socket.io", "web", "server", "well", "\r\n"], "with_lemma_count": 38, "with_lemma": ["\r\n    ", "attempt", "find", "web", "server", "machine", "would", "treat", "startedcommand", "\n\r\n", "$", "winpty", "python", "-m", "http.server", "5000(found", "somwhere", "internet", "trigger", "firewall", "tell", "block", "python.exe", "ask", "continue", "negate", "python", "base", "web", "server", "work", "well", "time", "flask-socket.io", "web", "server", "well", "\r\n"]}, {"no_lemma_count": 42, "no_lemma": ["problem", "limiting", "path", "/api", "data", "http", "method", "post", "@app.route('/api", "data", "methods=['post", "cors", "requires", "client", "make", "options", "pre", "flight", "call", "path", "find", "origins", "allowed", "stuff", "like", "headers", "code", "permits", "post", "options", "call", "declined", "cors", "mechanism", "fails", "fix", "add", "options", "list", "permitted", "methods", "route"], "with_lemma_count": 42, "with_lemma": ["problem", "limit", "path", "/api", "datum", "http", "method", "post", "@app.route('/api", "datum", "methods=['post", "cor", "require", "client", "make", "option", "pre", "flight", "call", "path", "find", "origin", "allow", "stuff", "like", "header", "code", "permit", "post", "option", "call", "decline", "cor", "mechanism", "fail", "fix", "add", "option", "list", "permit", "method", "route"]}]