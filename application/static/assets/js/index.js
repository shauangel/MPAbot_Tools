// Code generated by Google Gemini
// Modified by An Chi

const messageInput = document.getElementById('message-input');
const sendButton = document.getElementById('send-button');
const messagesContainer = document.querySelector('.messages');
let currStep = 0



function addMessage(message, isUser) {
  // create row
  const rowElement = document.createElement('div');
  rowElement.classList.add('row');

  // create avatar
  avatarElement = addAvatar(isUser);

  // create message column
  const messageElement = document.createElement('div');
  messageElement.classList.add('message');
  messageElement.innerHTML = message;
  if (isUser) {
    messageElement.classList.add('user-message', 'column-user');
  } else {
    messageElement.classList.add('bot-message', 'column-bot');
  }
  rowElement.appendChild(avatarElement);
  rowElement.appendChild(messageElement);
  messagesContainer.appendChild(rowElement);
  messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

function addAvatar(isUser) {
  let avatarElement = document.createElement('div');
  let imgElement = document.createElement('img');
  imgElement.classList.add('avatar');
  if(isUser){
    avatarElement.classList.add('column-user');
    imgElement.src = "static/images/cat.png";
    imgElement.alt = "user";
  }
  else{
    avatarElement.classList.add('column-bot');
    imgElement.src = "static/images/PSAbot.png";
    imgElement.alt = "bot";
  }
  avatarElement.appendChild(imgElement);
  return avatarElement;
}

function addBlockRank(rank) {
  for(let i = 0; i < rank.length; i++){
    let text = "";
    text +="<h3>Rank " + (i+1) + ": <br></h3>"
         + "<a href='" + rank[i].link + "'>Click me to see full website</a>"
         + "<br>" + rank[i].content + "<br>";
    addMessage(text, false);
  }
}

function setWaitMsg(){
  const rowElement = document.createElement('div');
  rowElement.id = "wait-msg";
  rowElement.classList.add('row');
  rowElement.innerHTML = "Please wait...";
  messagesContainer.appendChild(rowElement)
}

function getMessage(){
  const message = messageInput.value.trim();
  if (message!="") {
    addMessage(message, true);
    /*
    fetch('http://172.20.10.3:8000/api/old_block_anaylsis', {
      method: 'POST',
      json: {
        "items": [''],
        "q": "How can I create a stand-alone binary from a Python script?"
      }
    })
    .then(response => response.json())
    .then(data => {
      addMessage(addBlockRank(data), false);
    })
    .catch(error => {
      console.error('Error sending message:', error);
    });
    */
    messageInput.value = '';
    currStep += 1;
    if(currStep > 2){
        setWaitMsg();
        fetch('http://127.0.0.1:8000/api/test', {
          method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
          const element = document.getElementById("wait-msg");
          element.remove();
          addBlockRank(data);
        })
        .catch(error => {
          console.error('Error sending message:', error);
        });
    }
    else{
        botResponse = nextDialog(message, currStep);
        addMessage(botResponse, false);
    }
  }
}

sendButton.addEventListener('click', getMessage);
messageInput.addEventListener('keypress', (e)=>{ if(e.key == "Enter"){ getMessage(); } });